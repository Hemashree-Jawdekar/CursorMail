{"ast":null,"code":"var _jsxFileName = \"/Users/trushantramdasjadhav/Desktop/Sampleproject/CursorMail/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  setIsAuth\n}) {\n  _s();\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [cc, setCc] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const [preview, setPreview] = useState(null);\n  const navigate = useNavigate();\n  const handleCreds = e => {\n    e.preventDefault();\n    setStep(2);\n  };\n  const handleBulkMail = async e => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    if (cc) formData.append('cc', cc);\n    for (let i = 0; i < attachments.length; i++) {\n      formData.append('attachments', attachments[i]);\n    }\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error sending emails');\n    }\n  };\n\n  // Helper to render template\n  function renderTemplate(template, data) {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) => data[key] || '');\n  }\n\n  // Preview handler\n  const handlePreview = () => {\n    if (!csv) {\n      setMsg('Please upload a CSV file for preview.');\n      return;\n    }\n    Papa.parse(csv, {\n      header: true,\n      complete: results => {\n        const first = results.data[0];\n        if (!first || !first.Name || !first.Email) {\n          setMsg('CSV must have Name and Email columns.');\n          return;\n        }\n        setPreview({\n          subject: renderTemplate(subject, first),\n          body: renderTemplate(body, first),\n          name: first.Name,\n          email: first.Email\n        });\n      },\n      error: () => setMsg('Error parsing CSV for preview.')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"creds-form\",\n      onSubmit: handleCreds,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Email Credentials for Sending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Gmail Email ID\",\n        type: \"email\",\n        value: emailId,\n        onChange: e => setEmailId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"App Password\",\n        type: \"password\",\n        value: appPassword,\n        onChange: e => setAppPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bulkmail-form\",\n      onSubmit: handleBulkMail,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Bulk Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: e => setCsv(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"CC (comma separated emails)\",\n        value: cc,\n        onChange: e => setCc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: e => setAttachments(Array.from(e.target.files))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Subject (use {{name}} for personalization)\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Body (use {{name}} for personalization)\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePreview,\n        style: {\n          marginBottom: '0.5rem'\n        },\n        children: \"Preview Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-preview\",\n      style: {\n        background: '#fffbe6',\n        border: '1px solid #ffe082',\n        borderRadius: 8,\n        padding: '1rem',\n        marginTop: '1rem',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Email Preview (for: \", preview.name, \" <\", preview.email, \">)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), \" \", preview.subject, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          margin: 0\n        },\n        children: preview.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: msg.includes('success') ? 'green' : 'red',\n        fontWeight: 500,\n        marginTop: 10\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"PoUaibRGS7yFxAxWFT9BdMaYirU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Papa","jsxDEV","_jsxDEV","Dashboard","setIsAuth","_s","emailId","setEmailId","appPassword","setAppPassword","csv","setCsv","subject","setSubject","body","setBody","cc","setCc","attachments","setAttachments","msg","setMsg","step","setStep","preview","setPreview","navigate","handleCreds","e","preventDefault","handleBulkMail","formData","FormData","append","i","length","res","post","data","message","err","_err$response","_err$response$data","response","renderTemplate","template","replace","_","key","handlePreview","parse","header","complete","results","first","Name","Email","name","email","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","type","value","onChange","target","required","accept","files","multiple","Array","from","onClick","style","marginBottom","background","border","borderRadius","padding","marginTop","textAlign","whiteSpace","margin","color","includes","fontWeight","_c","$RefreshReg$"],"sources":["/Users/trushantramdasjadhav/Desktop/Sampleproject/CursorMail/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Papa from 'papaparse';\n\nexport default function Dashboard({ setIsAuth }) {\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [cc, setCc] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const [preview, setPreview] = useState(null);\n  const navigate = useNavigate();\n\n  const handleCreds = (e) => {\n    e.preventDefault();\n    setStep(2);\n  };\n\n  const handleBulkMail = async (e) => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    if (cc) formData.append('cc', cc);\n    for (let i = 0; i < attachments.length; i++) {\n      formData.append('attachments', attachments[i]);\n    }\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      setMsg(err.response?.data?.message || 'Error sending emails');\n    }\n  };\n\n  // Helper to render template\n  function renderTemplate(template, data) {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (_, key) => data[key] || '');\n  }\n\n  // Preview handler\n  const handlePreview = () => {\n    if (!csv) {\n      setMsg('Please upload a CSV file for preview.');\n      return;\n    }\n    Papa.parse(csv, {\n      header: true,\n      complete: (results) => {\n        const first = results.data[0];\n        if (!first || !first.Name || !first.Email) {\n          setMsg('CSV must have Name and Email columns.');\n          return;\n        }\n        setPreview({\n          subject: renderTemplate(subject, first),\n          body: renderTemplate(body, first),\n          name: first.Name,\n          email: first.Email\n        });\n      },\n      error: () => setMsg('Error parsing CSV for preview.')\n    });\n  };\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      {step === 1 ? (\n        <form className=\"creds-form\" onSubmit={handleCreds}>\n          <h3>Enter Email Credentials for Sending</h3>\n          <input placeholder=\"Gmail Email ID\" type=\"email\" value={emailId} onChange={e => setEmailId(e.target.value)} required />\n          <input placeholder=\"App Password\" type=\"password\" value={appPassword} onChange={e => setAppPassword(e.target.value)} required />\n          <button type=\"submit\">Continue</button>\n        </form>\n      ) : (\n        <form className=\"bulkmail-form\" onSubmit={handleBulkMail}>\n          <h3>Send Bulk Emails</h3>\n          \n          <input type=\"file\" accept=\".csv\" onChange={e => setCsv(e.target.files[0])} required />\n          <input placeholder=\"CC (comma separated emails)\" value={cc} onChange={e => setCc(e.target.value)} />\n          <input type=\"file\" multiple onChange={e => setAttachments(Array.from(e.target.files))} />\n          <input placeholder=\"Subject (use {{name}} for personalization)\" value={subject} onChange={e => setSubject(e.target.value)} required />\n          <textarea placeholder=\"Body (use {{name}} for personalization)\" value={body} onChange={e => setBody(e.target.value)} required />\n          <button type=\"button\" onClick={handlePreview} style={{marginBottom: '0.5rem'}}>Preview Email</button>\n          <button type=\"submit\">Send Emails</button>\n        </form>\n      )}\n      {preview && (\n        <div className=\"email-preview\" style={{background:'#fffbe6',border:'1px solid #ffe082',borderRadius:8,padding:'1rem',marginTop:'1rem',textAlign:'left'}}>\n          <h4>Email Preview (for: {preview.name} &lt;{preview.email}&gt;)</h4>\n          <strong>Subject:</strong> {preview.subject}<br/>\n          <strong>Body:</strong>\n          <pre style={{whiteSpace:'pre-wrap',margin:0}}>{preview.body}</pre>\n        </div>\n      )}\n      {msg && <div style={{ color: msg.includes('success') ? 'green' : 'red', fontWeight: 500, marginTop: 10 }}>{msg}</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}