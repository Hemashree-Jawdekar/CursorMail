{"ast":null,"code":"var _jsxFileName = \"/Users/trushantramdasjadhav/Desktop/Sampleproject/CursorMail/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  setIsAuth\n}) {\n  _s();\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [cc, setCc] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const navigate = useNavigate();\n  const handleCreds = e => {\n    e.preventDefault();\n    setStep(2);\n  };\n  const handleBulkMail = async e => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    if (cc) formData.append('cc', cc);\n    for (let i = 0; i < attachments.length; i++) {\n      formData.append('attachments', attachments[i]);\n    }\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error sending emails');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"creds-form\",\n      onSubmit: handleCreds,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Email Credentials for Sending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Gmail Email ID\",\n        type: \"email\",\n        value: emailId,\n        onChange: e => setEmailId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"App Password\",\n        type: \"password\",\n        value: appPassword,\n        onChange: e => setAppPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bulkmail-form\",\n      onSubmit: handleBulkMail,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Bulk Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload CSV (with email and name columns):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: e => setCsv(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CC (comma separated emails):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"CC (comma separated emails)\",\n          value: cc,\n          onChange: e => setCc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Attach Files:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setAttachments(e.target.files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject (use \", {\n          name\n        }, \" for personalization):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Subject (use {{name}})\",\n          value: subject,\n          onChange: e => setSubject(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Body (use \", {\n          name\n        }, \" for personalization):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Body (use {{name}})\",\n          value: body,\n          onChange: e => setBody(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: msg.includes('success') ? 'green' : 'red',\n        fontWeight: 500,\n        marginTop: 10\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"9P8rEGn0AglH5XIUyTuFqIDq//k=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","setIsAuth","_s","emailId","setEmailId","appPassword","setAppPassword","csv","setCsv","subject","setSubject","body","setBody","cc","setCc","attachments","setAttachments","msg","setMsg","step","setStep","navigate","handleCreds","e","preventDefault","handleBulkMail","formData","FormData","append","i","length","res","post","data","message","err","_err$response","_err$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","type","value","onChange","target","required","accept","files","multiple","name","style","color","includes","fontWeight","marginTop","_c","$RefreshReg$"],"sources":["/Users/trushantramdasjadhav/Desktop/Sampleproject/CursorMail/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Dashboard({ setIsAuth }) {\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [cc, setCc] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const navigate = useNavigate();\n\n  const handleCreds = (e) => {\n    e.preventDefault();\n    setStep(2);\n  };\n\n  const handleBulkMail = async (e) => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    if (cc) formData.append('cc', cc);\n    for (let i = 0; i < attachments.length; i++) {\n      formData.append('attachments', attachments[i]);\n    }\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      setMsg(err.response?.data?.message || 'Error sending emails');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      {step === 1 ? (\n        <form className=\"creds-form\" onSubmit={handleCreds}>\n          <h3>Enter Email Credentials for Sending</h3>\n          <input placeholder=\"Gmail Email ID\" type=\"email\" value={emailId} onChange={e => setEmailId(e.target.value)} required />\n          <input placeholder=\"App Password\" type=\"password\" value={appPassword} onChange={e => setAppPassword(e.target.value)} required />\n          <button type=\"submit\">Continue</button>\n        </form>\n      ) : (\n        <form className=\"bulkmail-form\" onSubmit={handleBulkMail}>\n  <h3>Send Bulk Emails</h3>\n\n  <label>\n    Upload CSV (with email and name columns):\n    <input type=\"file\" accept=\".csv\" onChange={e => setCsv(e.target.files[0])} required />\n  </label>\n\n  <label>\n    CC (comma separated emails):\n    <input\n      type=\"text\"\n      placeholder=\"CC (comma separated emails)\"\n      value={cc}\n      onChange={e => setCc(e.target.value)}\n    />\n  </label>\n\n  <label>\n    Attach Files:\n    <input\n      type=\"file\"\n      multiple\n      onChange={e => setAttachments(e.target.files)}\n    />\n  </label>\n\n  <label>\n    Subject (use {{name}} for personalization):\n    <input\n      type=\"text\"\n      placeholder=\"Subject (use {{name}})\"\n      value={subject}\n      onChange={e => setSubject(e.target.value)}\n      required\n    />\n  </label>\n\n  <label>\n    Body (use {{name}} for personalization):\n    <textarea\n      placeholder=\"Body (use {{name}})\"\n      value={body}\n      onChange={e => setBody(e.target.value)}\n      required\n    />\n  </label>\n\n  <button type=\"submit\">Send Emails</button>\n</form>\n\n      )}\n      {msg && <div style={{ color: msg.includes('success') ? 'green' : 'red', fontWeight: 500, marginTop: 10 }}>{msg}</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}