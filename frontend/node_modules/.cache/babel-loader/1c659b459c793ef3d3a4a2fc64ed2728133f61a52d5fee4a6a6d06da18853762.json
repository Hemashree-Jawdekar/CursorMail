{"ast":null,"code":"var _jsxFileName = \"/Users/trushantramdasjadhav/Desktop/Study materials/Sampleproject/CursorMail/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const navigate = useNavigate();\n  const handleCreds = e => {\n    e.preventDefault();\n    setStep(2);\n  };\n  const handleBulkMail = async e => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMsg(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error sending emails');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"creds-form\",\n      onSubmit: handleCreds,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Email Credentials for Sending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Gmail Email ID\",\n        type: \"email\",\n        value: emailId,\n        onChange: e => setEmailId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"App Password\",\n        type: \"password\",\n        value: appPassword,\n        onChange: e => setAppPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bulkmail-form\",\n      onSubmit: handleBulkMail,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Bulk Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: e => setCsv(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Subject (use {{name}} for personalization)\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Body (use {{name}} for personalization)\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: msg.includes('success') ? 'green' : 'red',\n        fontWeight: 500,\n        marginTop: 10\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: 20\n      },\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"DK5KwYIR2jC8I63sjEm5NGCxsmE=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","emailId","setEmailId","appPassword","setAppPassword","csv","setCsv","subject","setSubject","body","setBody","msg","setMsg","step","setStep","navigate","handleCreds","e","preventDefault","handleBulkMail","formData","FormData","append","res","post","data","message","err","_err$response","_err$response$data","response","handleLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","type","value","onChange","target","required","accept","files","style","color","includes","fontWeight","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/trushantramdasjadhav/Desktop/Study materials/Sampleproject/CursorMail/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Dashboard() {\n  const [emailId, setEmailId] = useState('');\n  const [appPassword, setAppPassword] = useState('');\n  const [csv, setCsv] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [msg, setMsg] = useState('');\n  const [step, setStep] = useState(1);\n  const navigate = useNavigate();\n\n  const handleCreds = (e) => {\n    e.preventDefault();\n    setStep(2);\n  };\n\n  const handleBulkMail = async (e) => {\n    e.preventDefault();\n    if (!csv) return setMsg('Please upload a CSV file.');\n    const formData = new FormData();\n    formData.append('csv', csv);\n    formData.append('subject', subject);\n    formData.append('body', body);\n    formData.append('email_id', emailId);\n    formData.append('app_password', appPassword);\n    try {\n      const res = await axios.post('http://localhost:3000/send-bulk-emails', formData);\n      setMsg(res.data.message);\n    } catch (err) {\n      setMsg(err.response?.data?.message || 'Error sending emails');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      {step === 1 ? (\n        <form className=\"creds-form\" onSubmit={handleCreds}>\n          <h3>Enter Email Credentials for Sending</h3>\n          <input placeholder=\"Gmail Email ID\" type=\"email\" value={emailId} onChange={e => setEmailId(e.target.value)} required />\n          <input placeholder=\"App Password\" type=\"password\" value={appPassword} onChange={e => setAppPassword(e.target.value)} required />\n          <button type=\"submit\">Continue</button>\n        </form>\n      ) : (\n        <form className=\"bulkmail-form\" onSubmit={handleBulkMail}>\n          <h3>Send Bulk Emails</h3>\n          <input type=\"file\" accept=\".csv\" onChange={e => setCsv(e.target.files[0])} required />\n          <input placeholder=\"Subject (use {{name}} for personalization)\" value={subject} onChange={e => setSubject(e.target.value)} required />\n          <textarea placeholder=\"Body (use {{name}} for personalization)\" value={body} onChange={e => setBody(e.target.value)} required />\n          <button type=\"submit\">Send Emails</button>\n        </form>\n      )}\n      {msg && <div style={{ color: msg.includes('success') ? 'green' : 'red', fontWeight: 500, marginTop: 10 }}>{msg}</div>}\n      <button style={{ marginTop: 20 }} onClick={handleLogout}>Logout</button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}